#!/usr/bin/env node\n\n/**\n * 향상된 SUMIFS 계산 엔진 테스트\n * 셀 주소 기반 직접 접근으로 100% 정확도 달성 목표\n */\n\nconst EnhancedCalculationEngine = require('./src/engines/EnhancedCalculationEngine');\nconst XLSX = require('xlsx');\nconst path = require('path');\n\nasync function extractSUMIFSFormulas(filePath) {\n  try {\n    console.log(`Excel 파일에서 SUMIFS 수식 추출 중...`);\n    \n    const workbook = XLSX.readFile(filePath, { cellFormula: true });\n    const formulas = [];\n\n    workbook.SheetNames.forEach(sheetName => {\n      const worksheet = workbook.Sheets[sheetName];\n      \n      Object.keys(worksheet).forEach(cellAddress => {\n        if (cellAddress.startsWith('!')) return;\n        \n        const cell = worksheet[cellAddress];\n        if (cell.f && cell.f.includes('SUMIFS')) {\n          formulas.push({\n            sheet: sheetName,\n            cell: cellAddress,\n            formula: cell.f,\n            value: cell.v\n          });\n        }\n      });\n    });\n\n    console.log(`✅ SUMIFS 수식 추출 완료: ${formulas.length}개`);\n    return formulas;\n    \n  } catch (error) {\n    console.error('Excel 파일 읽기 오류:', error);\n    throw error;\n  }\n}\n\nasync function testEnhancedSUMIFS() {\n  console.log('=== 향상된 SUMIFS 계산 엔진 테스트 ===\\n');\n\n  const excelPath = path.join(__dirname, '..', 'decrypted_sample.xlsx');\n  console.log(`Excel 파일 경로: ${excelPath}`);\n\n  try {\n    // 1. 엔진 초기화 및 Excel 파일 로드\n    const engine = new EnhancedCalculationEngine();\n    await engine.loadExcelFile(excelPath);\n\n    // 2. SUMIFS 수식 추출\n    const formulas = await extractSUMIFSFormulas(excelPath);\n    console.log(`\\n추출된 SUMIFS 수식: ${formulas.length}개\\n`);\n\n    // 3. 샘플 테스트 (처음 10개)\n    console.log('=== 샘플 테스트 (처음 10개) ===');\n    const sampleFormulas = formulas.slice(0, 10);\n    \n    for (let i = 0; i < sampleFormulas.length; i++) {\n      const formula = sampleFormulas[i];\n      \n      try {\n        console.log(`\\n${i + 1}. [${formula.sheet}!${formula.cell}]`);\n        console.log(`   수식: ${formula.formula}`);\n        console.log(`   Excel 결과: ${formula.value}`);\n        \n        const jsResult = engine.executeSUMIFS(formula);\n        console.log(`   JavaScript 결과: ${jsResult}`);\n        \n        const match = jsResult === (formula.value || 0);\n        console.log(`   매칭: ${match ? '✅' : '❌'}`);\n        \n        if (!match) {\n          console.log(`   차이: ${Math.abs(jsResult - (formula.value || 0))}`);\n        }\n        \n      } catch (error) {\n        console.log(`   ❌ 오류: ${error.message}`);\n      }\n    }\n\n    // 4. 전체 테스트 (처음 50개로 제한)\n    console.log('\\n\\n=== 전체 테스트 (처음 50개) ===');\n    const testFormulas = formulas.slice(0, 50);\n    const results = await engine.executeAllSUMIFS(testFormulas);\n\n    // 5. 결과 분석\n    console.log('\\n=== 결과 분석 ===');\n    if (results.accuracy >= 95) {\n      console.log('🎉 테스트 성공: 95% 이상 정확도 달성!');\n    } else if (results.accuracy >= 90) {\n      console.log('✅ 테스트 양호: 90% 이상 정확도 달성');\n    } else {\n      console.log('⚠️  테스트 개선 필요: 정확도가 90% 미만');\n    }\n\n    // 불일치 케이스 분석\n    const mismatches = results.comparisons.filter(c => !c.match);\n    if (mismatches.length > 0) {\n      console.log(`\\n불일치 케이스 (처음 5개):`);\n      mismatches.slice(0, 5).forEach((mismatch, index) => {\n        console.log(`${index + 1}. [${mismatch.sheet}!${mismatch.cell}]`);\n        console.log(`   JavaScript: ${mismatch.jsResult}`);\n        console.log(`   Excel: ${mismatch.excelResult}`);\n        console.log(`   차이: ${Math.abs(mismatch.jsResult - mismatch.excelResult)}`);\n      });\n    }\n\n    // 오류 케이스 분석\n    if (results.errors.length > 0) {\n      console.log(`\\n오류 케이스 (처음 5개):`);\n      results.errors.slice(0, 5).forEach((error, index) => {\n        console.log(`${index + 1}. [${error.sheet}!${error.cell}] ${error.error}`);\n      });\n    }\n\n    return results;\n\n  } catch (error) {\n    console.error('테스트 실행 중 오류 발생:', error);\n    throw error;\n  }\n\n  console.log('\\n=== 향상된 SUMIFS 계산 엔진 테스트 완료 ===');\n}\n\n// 스크립트 직접 실행 시\nif (require.main === module) {\n  testEnhancedSUMIFS().catch(console.error);\n}\n\nmodule.exports = { testEnhancedSUMIFS };